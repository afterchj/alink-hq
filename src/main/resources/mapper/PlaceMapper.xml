<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.PlaceDao">

    <sql id="Base_Column_List">
        pl.id,
        pl.mid,
        pl.pname,
        pl.place_id,
        m.uid,
        m.mname,
        m.mesh_id,
        m.project_id,
        p.name,
        IFNULL(g.gcount,0) gcount
	</sql>

    <sql id="common_choose">
        <if test="uid!=null and uid!=''">
            <choose>
                <when test="role == 'admin'">
                    AND m.uid IN (SELECT u.id FROM f_user_account u INNER JOIN f_user_role r ON u.id=r.user_id WHERE
                    r.role_id in (2,3,4))
                </when>
                <when test="role == 'manager'">
                    AND m.uid IN (SELECT c.uid FROM f_user_customer c WHERE fid=(SELECT fid FROM f_user_customer WHERE
                    uid=#{uid}))
                    <!--
                        AND m.uid IN (SELECT c.uid FROM f_user_customer c INNER JOIN f_user_role r ON c.uid=r.user_id WHERE r.role_id in (4) OR fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid}))
                     -->
                </when>
                <when test="role == 'user'">
                    AND m.uid =#{uid}
                </when>
                <!--<otherwise>-->
                <!--</otherwise>-->
            </choose>
        </if>
    </sql>

    <insert id="save" parameterType="map">
        <selectKey keyProperty="id" order="BEFORE" resultType="int">
            SELECT IFNULL(max(place_id)+1,1) FROM f_place WHERE mid=#{mid}
        </selectKey>
        INSERT INTO f_place(place_id,pname,uid,mid,create_date,update_date ) VALUES(#{id},#{name},#{uid},#{mid},now(),now())
    </insert>

    <select id="getByMap" resultType="map" parameterType="SearchDict">
        SELECT
        <include refid="Base_Column_List"/>
        FROM f_place pl
        INNER JOIN f_mesh m ON m.id = pl.mid
        INNER JOIN f_project p ON p.id=m.project_id
        LEFT JOIN (SELECT COUNT(1) gcount,pid FROM f_group GROUP BY pid) g ON g.pid=pl.id
        WHERE 1=1
        <include refid="common_choose"/>
        <if test="name!=null and name!=''">
            AND p.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="mname!=null and mname!=''">
            AND m.mname LIKE CONCAT('%',#{mname},'%')
        </if>
        <if test="meshId!=null and meshId!=''">
            AND m.mesh_id LIKE CONCAT('%',#{meshId},'%')
        </if>
        <if test="pname!=null and pname!=''">
            AND pl.pname LIKE CONCAT('%',#{pname},'%')
        </if>
        <if test="placeId!=null and placeId!=''">
            AND pl.place_id LIKE CONCAT('%',#{placeId},'%')
        </if>
        <if test="mid!=null and mid!=''">
            AND pl.mid=#{mid}
        </if>
        <if test="projectId!=null and projectId!=''">
            AND m.project_id=#{projectId}
        </if>
--         GROUP BY m.uid,m.mesh_id
        ORDER BY pl.update_date DESC
    </select>

    <select id="getPlaceInfo" resultType="MeshInfo" parameterType="int">
        SELECT
             pl.id,
             pl.mid,
             pl.pname,
             pl.place_id,
             p.name,
             m.mname,
             m.mesh_id,
             m.project_id,
             IFNULL(gc.gcount, 0) gcount,
             IFNULL(l.lcount, 0) lcount
        FROM f_place pl
        INNER JOIN f_mesh m ON m.id=pl.mid
        LEFT JOIN f_project p ON p.id=m.project_id
        LEFT JOIN f_group g ON g.pid=pl.id
        LEFT JOIN (SELECT COUNT(1) gcount,pid FROM f_group GROUP BY pid) gc ON gc.pid=pl.id
        LEFT JOIN (SELECT COUNT(1) lcount,pid FROM f_light GROUP BY pid) l ON l.pid=pl.id
        WHERE pl.id=#{id} LIMIT 1
    </select>


    <select id="getCount" resultType="int" parameterType="map">
        SELECT COUNT(1)
        FROM f_place p
        INNER JOIN f_mesh m ON m.id = p.mid
        WHERE 1=1
        <choose>
            <when test="mid!=null and mid!=''">
                AND p.mid=#{mid}
            </when>
            <otherwise>
                AND m.id = (SELECT mid FROM f_place WHERE id=#{id})
            </otherwise>
        </choose>
        AND p.pname = #{name}
    </select>

    <delete id="deleteByIds" parameterType="list">
        DELETE FROM f_place
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="selectByMid" resultType="map" parameterType="list">
        SELECT
        m.id,
        m.mname,
        m.mesh_id,
        p.name
        FROM f_mesh m
        INNER JOIN f_project p ON m.project_id = p.id
        INNER JOIN (SELECT COUNT(1) pcount,mid FROM f_place GROUP BY mid) pl ON pl.mid=m.id
        INNER JOIN (SELECT COUNT(1) scount,mid FROM f_scene GROUP BY mid) s ON s.mid=m.id
        WHERE m.id IN
        <foreach collection="list" item="mid" index="index" open="(" close=")" separator=",">
            #{mid}
        </foreach>
    </select>

    <select id="getMesh" resultType="OptionList">
        SELECT CONCAT_WS('_',id,mesh_id) id, mname label FROM f_mesh m WHERE 1=1
        <include refid="common_choose"/>
    </select>

    <update id="saveRename" parameterType="map">
        UPDATE f_place SET pname=#{name},update_date=NOW() WHERE id =#{id}
    </update>
</mapper>