<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.ProjectDao">


    <select id="findProjectList" resultType="Integer">
        SELECT DISTINCT(id) FROM f_project WHERE uid IN (SELECT uid FROM f_user_customer WHERE fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid}))
    </select>

    <select id="searchBySuper" resultType="com.tpadsz.after.entity.ProjectList">
        SELECT t1.id,t1.name,count(t5.id) as meshNum,t2.account as account,ANY_VALUE(t4.coname) as coname,DATE_FORMAT(t1.create_date,'%Y-%m-%d %H:%i:%s') AS create_date,DATE_FORMAT(t1.update_date,'%Y-%m-%d %H:%i:%s') AS update_date FROM
        (SELECT * FROM  f_project p WHERE p.name LIKE CONCAT('%',IFNULL(#{name},''),'%') and p.create_date BETWEEN IFNULL(NULLIF(#{startCreateDate},''),p.create_date) and IFNULL(NULLIF(#{endCreateDate},''),p.create_date) and p.update_date BETWEEN IFNULL(NULLIF(#{startUpdateDate},''),p.update_date) and IFNULL(NULLIF(#{endUpdateDate},''),p.update_date)) AS t1 INNER JOIN f_user_account AS t2 ON t1.uid = t2.id INNER JOIN f_user_customer AS t3 ON t2.id = t3.uid INNER JOIN f_firm AS t4 ON t3.fid = t4.id INNER JOIN f_mesh AS t5 ON t1.id = t5.project_id WHERE t2.account LIKE CONCAT('%',IFNULL(#{account},''),'%') GROUP BY t5.project_id ORDER BY t1.update_date DESC, t1.create_date DESC
    </select>

    <select id="searchByManager" resultType="com.tpadsz.after.entity.ProjectList">
        SELECT t1.id,t1.name,count(t5.id) as meshNum,t2.account as account,ANY_VALUE(t4.coname) as coname,DATE_FORMAT(t1.create_date,'%Y-%m-%d %H:%i:%s') AS create_date,DATE_FORMAT(t1.update_date,'%Y-%m-%d %H:%i:%s') AS update_date FROM
        (SELECT * FROM f_project p WHERE p.name LIKE CONCAT('%',IFNULL(#{name},''),'%') and p.create_date BETWEEN IFNULL(NULLIF(#{startCreateDate},''),p.create_date) and IFNULL(NULLIF(#{endCreateDate},''),p.create_date) and p.update_date BETWEEN IFNULL(NULLIF(#{startUpdateDate},''),p.update_date) and IFNULL(NULLIF(#{endUpdateDate},''),p.update_date) and id IN
        <foreach item="item" collection="list" open="(" separator="," close=")">#{item}
        </foreach>) AS t1
        INNER JOIN f_user_account AS t2 ON t1.uid = t2.id INNER JOIN f_user_customer AS t3 ON t2.id = t3.uid INNER JOIN f_firm AS t4 ON t3.fid = t4.id INNER JOIN f_mesh AS t5 ON t1.id = t5.project_id WHERE t2.account LIKE CONCAT('%',IFNULL(#{account},''),'%') GROUP BY t5.project_id ORDER BY t1.update_date DESC, t1.create_date DESC
    </select>

    <select id="searchByUser" resultType="com.tpadsz.after.entity.ProjectList">
        SELECT t1.id,t1.name,count(t5.id) as meshNum,t2.account as account,ANY_VALUE(t4.coname) as coname,DATE_FORMAT(t1.create_date,'%Y-%m-%d %H:%i:%s') AS create_date,DATE_FORMAT(t1.update_date,'%Y-%m-%d %H:%i:%s') AS update_date FROM
        (SELECT * FROM f_project p WHERE p.name LIKE CONCAT('%',IFNULL(#{name},''),'%') and p.create_date BETWEEN IFNULL(NULLIF(#{startCreateDate},''),p.create_date) and IFNULL(NULLIF(#{endCreateDate},''),p.create_date) and p.update_date BETWEEN IFNULL(NULLIF(#{startUpdateDate},''),p.update_date) and IFNULL(NULLIF(#{endUpdateDate},''),p.update_date) and p.uid=#{uid}) AS t1 INNER JOIN f_user_account AS t2 ON t1.uid = t2.id INNER JOIN f_user_customer AS t3 ON t2.id = t3.uid INNER JOIN f_firm AS t4 ON t3.fid = t4.id INNER JOIN f_mesh AS t5 ON t1.id = t5.project_id GROUP BY t5.project_id ORDER BY t1.update_date DESC, t1.create_date DESC
    </select>

    <insert id="createProject" parameterType="string">
        INSERT INTO f_project (name,uid,create_date,update_date) VALUES(#{name},#{uid},NOW(),NOW())
    </insert>

    <update id="renameProject">
            update f_project p set p.name = #{name},p.update_date = NOW() where p.id=#{projectId}
    </update>

</mapper>