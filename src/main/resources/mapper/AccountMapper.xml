<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.AccountDao">

    <select id="findRoleIdByUid" resultType="Integer" parameterType="string">
        SELECT role_id FROM f_user_role WHERE user_id=#{uid}
    </select>

    <select id="findFirmUid" resultType="Integer" parameterType="string">
        SELECT uid FROM f_user_customer WHERE fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid}) and uid =#{userId}
    </select>

    <select id="findFirmUidOfUser" resultType="string" parameterType="string">
        SELECT uid FROM f_user_customer AS t1 INNER JOIN f_user_role AS t4 ON t1.uid = t4.user_id WHERE t4.role_id = 4 and t1.fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid})
    </select>

    <select id="findFirmList" resultType="com.tpadsz.after.entity.Firm">
        SELECT id,coname FROM f_firm ORDER BY id
    </select>

    <select id="findRoleList" resultType="com.tpadsz.after.entity.Role">
        SELECT id,role_name AS roleName FROM f_role ORDER BY id
    </select>

    <select id="findFirmByUid" resultType="com.tpadsz.after.entity.Firm" parameterType="string">
        SELECT id,coname FROM f_firm WHERE id=(SELECT fid FROM f_user_customer WHERE uid=#{uid})
    </select>

    <select id="findAccountByFid" resultType="com.tpadsz.after.entity.User" parameterType="Integer">
        SELECT id,account FROM f_user_account WHERE id IN (SELECT uid FROM f_user_customer WHERE fid=#{fid})
    </select>

    <select id="findProjectByUid" resultType="int" parameterType="string">
        SELECT COUNT(1) FROM f_project WHERE uid=#{uid}
    </select>

    <select id="searchBySuper" resultType="com.tpadsz.after.entity.UserList">
        SELECT t1.id,t1.account,t1.uname,t1.mobile,t1.email,t3.coname,t4.role_id,DATE_FORMAT(t1.create_date,'%Y-%m-%d %H:%i:%s') AS create_date,t1.status,t3.status AS coStatus,t1.memo FROM (SELECT * FROM f_user_account WHERE account LIKE CONCAT('%',IFNULL(#{account},''),'%') and create_date BETWEEN IFNULL(NULLIF(#{startDate},''),create_date) and IFNULL(NULLIF(#{endDate},''),create_date)) AS t1 INNER JOIN f_user_customer AS t2 ON t1.id = t2.uid INNER JOIN f_firm AS t3 ON t2.fid = t3.id INNER JOIN f_user_role AS t4 ON t1.id = t4.user_id WHERE t2.fid = IFNULL(NULLIF(#{fid},''),fid) and t4.role_id &lt;&gt;1 and t4.role_id = IFNULL(NULLIF(#{roleId},''),t4.role_id)
        <if test="uname!=null and uname!=''">
            and t1.uname LIKE CONCAT('%',#{uname},'%')
        </if>
        ORDER BY t1.update_date DESC,t1.create_date DESC
    </select>

    <select id="searchByAdmin" resultType="com.tpadsz.after.entity.UserList">
        SELECT t1.id,t1.account,t1.uname,t1.mobile,t1.email,t3.coname,t4.role_id,DATE_FORMAT(t1.create_date,'%Y-%m-%d %H:%i:%s') AS create_date,t1.status,t3.status AS coStatus,t1.memo FROM (SELECT * FROM f_user_account WHERE account LIKE CONCAT('%',IFNULL(#{account},''),'%') and create_date BETWEEN IFNULL(NULLIF(#{startDate},''),create_date) and IFNULL(NULLIF(#{endDate},''),create_date)) AS t1 INNER JOIN f_user_customer AS t2 ON t1.id = t2.uid INNER JOIN f_firm AS t3 ON t2.fid = t3.id INNER JOIN f_user_role AS t4 ON t1.id = t4.user_id WHERE t2.fid = IFNULL(NULLIF(#{fid},''),fid) and t4.role_id IN(3,4) and t4.role_id = IFNULL(NULLIF(#{roleId},''),t4.role_id)
        <if test="uname!=null and uname!=''">
            and t1.uname LIKE CONCAT('%',#{uname},'%')
        </if>
        ORDER BY t1.update_date DESC,t1.create_date DESC
    </select>

    <select id="searchByManager" resultType="com.tpadsz.after.entity.UserList">
        SELECT t1.id,t1.account,t1.uname,t1.mobile,t1.email,t3.coname,t4.role_id,DATE_FORMAT(t1.create_date,'%Y-%m-%d
        %H:%i:%s') AS create_date,t1.status,t3.status AS coStatus,t1.memo FROM (SELECT * FROM f_user_account WHERE
        account LIKE CONCAT('%',IFNULL(#{account},''),'%') and create_date BETWEEN
        IFNULL(NULLIF(#{startDate},''),create_date) and IFNULL(NULLIF(#{endDate},''),create_date) and id IN
        <foreach item="item" collection="list" open="(" separator="," close=")">#{item}
        </foreach>) AS t1 INNER JOIN f_user_customer AS t2 ON t1.id = t2.uid INNER JOIN f_firm AS t3 ON
        t2.fid = t3.id INNER JOIN f_user_role AS t4 ON t1.id = t4.user_id
        <if test="uname!=null and uname!=''">
            WHERE t1.uname LIKE CONCAT('%',#{uname},'%')
        </if>
        ORDER BY t1.update_date DESC,t1.create_date DESC
    </select>


    <insert id="createAccount" parameterType="string">
        insert into f_user_account (account,pwd,salt,create_date,update_date) values (#{account},#{pwd},#{salt},NOW(),NOW())
        <selectKey keyProperty="id" order="AFTER" resultType="string">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="createFirmInfo" parameterType="integer">
        insert into f_user_customer (uid,fid) values (#{uid},#{fid})
    </insert>

    <insert id="createRoleInfo" parameterType="integer">
        insert into f_user_role (user_id,role_id) values (#{uid},#{roleId})
    </insert>

    <select id="findDefaultNetworkByUid" resultType="int" parameterType="string">
        select count(*) from f_mesh where mesh_id = '11223344' and uid= #{uid}
    </select>

    <insert id="generateDefaultNetwork" parameterType="com.tpadsz.after.entity.MeshInfo" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
            INSERT INTO f_mesh (mname,mesh_id,is_repeat,pwd,uid,project_id,create_date,update_date)
            VALUES(#{mname},#{mesh_id},#{pcount},'3344',#{pcount},0,NOW(),NOW())
    </insert>

    <insert id="createDefaultPlace" useGeneratedKeys="true" keyProperty="pid" parameterType="com.tpadsz.after.entity.SceneList">
        INSERT INTO f_place (place_id,pname,uid,mid,create_date,update_date) VALUES(0,'扫描区',#{uid},#{mid},NOW(),NOW());
    </insert>

    <insert id="createDefaultGroup" parameterType="com.tpadsz.after.entity.SceneList">
        INSERT INTO f_group (group_id,gname,mid,pid,create_date,update_date) VALUES(0,'未分组',#{mid},#{pid},NOW(),NOW());
    </insert>

    <select id="findByAccount" resultType="com.tpadsz.after.entity.User">
        SELECT * FROM f_user_account WHERE account=#{account}
    </select>

    <update id="updateAccount" parameterType="string">
        update f_user_account set pwd = #{pwd},salt = #{salt},update_date = NOW() where account=#{account}
    </update>

    <update id="transferAccount">
        update f_user_customer set fid = #{fid} where uid=(SELECT id FROM f_user_account WHERE account=#{account})
    </update>

    <update id="updateTransferedAccount" parameterType="string">
        update f_user_account set uname = NULL,mobile = NULL, email = NULL ,pwd = #{pwd},salt = #{salt},update_date = NOW() where account=#{account}
    </update>

    <delete id="delete" parameterType="string">
        DELETE FROM f_user_account WHERE id=#{uid};
        DELETE FROM f_user_customer WHERE uid=#{uid};
        DELETE FROM f_user_role WHERE user_id=#{uid};
    </delete>

    <update id="enable" parameterType="com.tpadsz.after.entity.User">
        <selectKey keyProperty="id" order="BEFORE" resultType="String">
            SELECT id FROM f_user_account WHERE account=#{account}
        </selectKey>
        <if test="status == 0">
        update f_user_account set status = 1,update_date = NOW() where account=#{account}
        </if>
        <if test="status == 1">
            update f_user_account set status = 0,update_date = NOW() where account=#{account}
        </if>
    </update>

    <update id="saveMemo" parameterType="string">
        update f_user_account set memo = #{memo},update_date = NOW() where account=#{account}
    </update>

    <select id="findAssociateProjectsList" resultType="ProjectList">
        SELECT t1.id,t1.name,t2.account,t2.uname,t4.coname,t1.is_associated FROM f_project t1 INNER JOIN f_user_account t2 ON t1.uid=t2.id INNER JOIN f_user_customer t3 ON t2.id=t3.uid INNER JOIN (SELECT * FROM f_firm WHERE id=(SELECT fid FROM f_user_customer WHERE uid=#{uid})) t4 ON t3.fid = t4.id WHERE t1.other !='old' or t1.other is NULL ORDER BY t1.update_date DESC
    </select>

    <update id="unassociated">
        update f_project set is_associated = NULL,update_date = NOW() WHERE uid IN (SELECT uid FROM f_user_customer WHERE fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid}));
        <if test="list.size != 0">
        update f_project set is_associated = 'unassociated',update_date = NOW()
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        </if>
    </update>
</mapper>