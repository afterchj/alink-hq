<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.GroupDao">

    <sql id="Base_Column_List">
		g.id,
        g.mid,
        g.gname,
        p.name,
        m.uid,
        m.project_id,
        m.mname,
        m.mesh_id,
        pl.id pid,
        pl.place_id,
        pl.pname,
        IFNULL(l.lcount,0) lcount
	</sql>

    <sql id="common_choose">
        <if test="uid!=null and uid!=''">
            <choose>
                <when test="role == 'admin'">
                    AND m.uid IN (SELECT u.id FROM f_user_account u INNER JOIN f_user_role r ON u.id=r.user_id WHERE
                    r.role_id in (2,3,4))
                </when>
                <when test="role == 'manager'">
                    AND m.uid IN (SELECT c.uid FROM f_user_customer c WHERE fid=(SELECT fid FROM f_user_customer WHERE
                    uid=#{uid}))
                    <!--
                        AND m.uid IN (SELECT c.uid FROM f_user_customer c INNER JOIN f_user_role r ON c.uid=r.user_id WHERE r.role_id in (4) OR fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid}))
                     -->
                </when>
                <when test="role == 'user'">
                    AND m.uid =#{uid}
                </when>
                <!--<otherwise>-->
                <!--</otherwise>-->
            </choose>
        </if>
    </sql>
    <select id="getByMap" resultType="map" parameterType="SearchDict">
        SELECT
        <include refid="Base_Column_List"/>
        FROM f_group g
        INNER JOIN f_mesh m ON m.id = g.mid
        INNER JOIN f_project p ON p.id=m.project_id
        INNER JOIN f_place pl ON pl.id = g.pid
        LEFT JOIN (SELECT COUNT(1) lcount,gid FROM f_light GROUP BY gid) l ON g.id=l.gid
        WHERE 1=1
        <include refid="common_choose"></include>
        <if test="name!=null and name!=''">
            AND p.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="mname!=null and mname!=''">
            AND m.mname LIKE CONCAT('%',#{mname},'%')
        </if>
        <if test="meshId!=null and meshId!=''">
            AND m.mesh_id LIKE CONCAT('%',#{meshId},'%')
        </if>
        <if test="gname!=null and gname!=''">
            AND g.gname LIKE CONCAT('%',#{gname},'%')
        </if>
        <if test="pid!=null and pid!=''">
            AND g.pid=#{pid}
        </if>
        <if test="mid!=null and mid!=''">
            AND m.id=#{mid}
        </if>
        <if test="projectId!=null and projectId!=''">
            AND m.project_id=#{projectId}
        </if>
        ORDER BY g.update_date DESC,lcount DESC
    </select>

    <select id="getCount" resultType="int" parameterType="SearchDict">
        SELECT COUNT(1) FROM f_group g
        INNER JOIN f_place p ON p.id = g.pid
        WHERE 1=1
        <choose>
            <when test="pid!=null and pid!=''">
                AND p.id=#{pid}
            </when>
            <otherwise>
                AND p.id = (SELECT pid FROM f_group WHERE id=#{id})
            </otherwise>
        </choose>
        AND g.gname = #{name}
    </select>

    <select id="getGroupInfo" resultType="MeshInfo" parameterType="int">
        SELECT
            g.id,
            m.id mid,
            IFNULL(g.gname, 'null') gname,
            IFNULL(p. NAME, 'null') NAME,
            m.project_id,
            m.mname,
            m.mesh_id,
            p.name,
            pl.pname,
            pl.id pid,
            IFNULL(l.lcount,0) lcount
--             COUNT(0) lcount
        FROM f_group g
        LEFT JOIN f_mesh m ON m.id = g.mid
        LEFT JOIN f_project p ON p.id = m.project_id
        LEFT JOIN f_place pl ON pl.id = g.pid
        LEFT JOIN (SELECT COUNT(1) lcount,gid FROM f_light GROUP BY gid) l ON g.id=l.gid
--         INNER JOIN (SELECT COUNT(1) lcount,l.id,l.gid FROM f_light l LEFT JOIN f_light_setting ls ON l.id = ls.lid GROUP BY lid,gid) l ON l.gid = g.id
        WHERE g.id=#{id}
    </select>
    <select id="selectByGid" resultType="map" parameterType="list">
        SELECT
        g.id,
        g.mid,
        g.gname,
        m.mesh_id,
        g.pid,
        IFNULL(p.pname,'null') pname
        FROM f_group g
        LEFT JOIN f_place p ON g.pid=p.id
        INNER JOIN f_mesh m ON m.id=g.mid
        WHERE g.id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="getPlaces" resultType="OptionList" parameterType="map">
        SELECT
        p.id,
        p.pname label
        FROM f_place p
        INNER JOIN f_mesh m ON p.mid = m.id
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND m.project_id=#{projectId}
        </if>
        <if test="mid!=null and mid!=''">
            AND m.id=#{mid}
        </if>
        LIMIT 1
    </select>

    <select id="getMesh" resultType="OptionList" parameterType="map">
        SELECT CONCAT_WS('_',id,mesh_id) id,mesh_id, mname label FROM f_mesh m
        WHERE 1=1
        <include refid="common_choose"></include>
--         GROUP BY mesh_id
    </select>
    <insert id="save" parameterType="SearchDict">
        <selectKey keyProperty="id" order="BEFORE" resultType="int">
            SELECT IFNULL(max(group_id)+1,1) FROM f_group WHERE mid=#{mid}
        </selectKey>
        INSERT INTO f_group(group_id,gname,mid,pid,create_date) VALUES(#{id},#{name},#{mid},#{pid},now())
    </insert>

    <delete id="deleteGroupByIds" parameterType="list">
        DELETE FROM f_group
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <update id="saveRename" parameterType="map">
        UPDATE f_group SET gname=#{name},update_date=NOW() WHERE id =#{id}
    </update>

    <update id="saveUpdate" parameterType="map">
        UPDATE f_group SET pid=#{pid},update_date=NOW()
        WHERE id IN
        <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
</mapper>