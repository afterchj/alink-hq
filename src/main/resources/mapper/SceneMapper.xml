<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.SceneDao">


    <select id="searchSceneList" resultType="com.tpadsz.after.entity.SceneList">
        SELECT s.id,s.sname AS sceneName,s.scene_id AS sceneId,#{lid} AS lid,#{meshName} AS meshName,#{meshId} AS meshId,#{mid} AS mid FROM f_scene s WHERE s.sname LIKE CONCAT('%',IFNULL(#{sceneName},''),'%') and s.scene_id LIKE CONCAT('%',IFNULL(#{sceneId},''),'%') and s.mid=#{mid} ORDER BY s.scene_id
    </select>

    <select id="findPlaceBySid" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT id AS pid,pname FROM f_place WHERE mid = (SELECT mid FROM f_scene WHERE id=#{sid}) ORDER BY place_id
    </select>

    <select id="findGroupByPid" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT id AS gid,gname FROM f_group WHERE pid = #{pid} ORDER BY group_id
    </select>

    <select id="findLightByGid" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT t1.id,t1.lmac,t1.lname,
        (CASE WHEN t2.x ='null' THEN t2.x WHEN t2.x !='null' and t2.x &lt; 0 THEN t2.x WHEN t2.x !='null' and t2.x &gt;= 0 and t2.x &lt;= 20 THEN CONCAT(t2.x,'(CCT调光)') WHEN t2.x !='null' and t2.x &gt;= 235 and t2.x &lt;= 273 THEN CONCAT(t2.x-235,'(RGB调光)') WHEN t2.x !='null' and t2.x &gt;= 571 and t2.x &lt;= 630 THEN CONCAT(t2.x-532,'(RGB调光)') WHEN t2.x !='null' and t2.x &gt;= 1786 and t2.x &lt;= 1899 THEN CONCAT(t2.x-1687,'(RGB调光)') WHEN t2.x = 50 THEN t2.x END) AS x,
        (CASE WHEN t2.y='null' THEN t2.y WHEN t2.y &lt; 0 THEN t2.y WHEN t2.y !='null' and t2.y !=50 and t2.y &gt;= 0 THEN CONCAT(100-t2.y*5,'%') WHEN t2.y=50 THEN 50 END) AS y FROM f_light AS t1 INNER JOIN f_light_setting AS t2 ON t1.id = t2.lid WHERE t1.gid = #{gid} and t2.sid = #{sid} ORDER BY t1.create_date
    </select>

    <select id="findLightInfoByLid" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT t1.id,t1.pid,t1.gid FROM f_light AS t1 WHERE t1.id = #{lid}
    </select>

    <select id="findXYByGid" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT DISTINCT (CASE WHEN t2.x ='null' THEN t2.x WHEN t2.x !='null' and t2.x &lt; 0 THEN t2.x WHEN t2.x !='null' and t2.x &gt;= 0 and t2.x &lt;= 20 THEN CONCAT(t2.x,'(CCT调光)') WHEN t2.x !='null' and t2.x &gt;= 235 and t2.x &lt;= 273 THEN CONCAT(t2.x-235,'(RGB调光)') WHEN t2.x !='null' and t2.x &gt;= 571 and t2.x &lt;= 630 THEN CONCAT(t2.x-532,'(RGB调光)') WHEN t2.x !='null' and t2.x &gt;= 1786 and t2.x &lt;= 1899 THEN CONCAT(t2.x-1687,'(RGB调光)') WHEN t2.x = 50 THEN t2.x END) AS x,(CASE WHEN t2.y='null' THEN t2.y WHEN t2.y &lt; 0 THEN t2.y WHEN t2.y !='null' and t2.y !=50 and t2.y &gt;= 0 THEN CONCAT(100-t2.y*5,'%') WHEN t2.y=50 THEN 50 END) AS y FROM f_light AS t1 INNER JOIN f_light_setting AS t2 ON t1.id = t2.lid WHERE t1.gid = #{gid} and t2.sid = #{sid}
    </select>

    <select id="findRepeatNameBySid" resultType="int">
        SELECT count(1) from f_scene s where s.sname = #{sceneName} and s.mid=(SELECT mid FROM f_scene WHERE id=#{sid})
    </select>

    <update id="renameScene">
        update f_scene s set s.sname = #{sceneName},s.update_date = NOW() where s.id=#{sid}
    </update>

    <delete id="deleteSid" parameterType="int">
        DELETE FROM f_scene WHERE id = #{sid};
    </delete>

    <update id="resetXY">
        <if test="mid!=null">
            UPDATE f_light_setting set x=#{x}, y=#{y},update_date= NOW() WHERE sid = #{sid} and lid IN (SELECT id FROM f_light WHERE mid=#{mid});
        </if>
    </update>

    <delete id="deleteXY">
        <if test="mid!=null">
        DELETE FROM f_light_setting WHERE sid = #{sid} and lid IN (SELECT id FROM f_light WHERE mid=#{mid});
        </if>
    </delete>

    <update id="saveSceneName">
        UPDATE f_scene SET sname = #{sceneName},update_date=NOW() WHERE id =#{sid}
    </update>

    <select id="findProjectByMeshId" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT t1.id AS project_id,t1.name,t2.id AS mid FROM f_project AS t1 INNER JOIN f_mesh AS t2 ON t1.id = t2.project_id WHERE t2.mesh_id = #{meshId}
    </select>

    <select id="findRoleIdByMid" resultType="int">
        SELECT role_id FROM f_user_role WHERE user_id = (SELECT uid FROM f_mesh WHERE id = #{mid})
    </select>

    <select id="findDefaultXY" resultType="com.tpadsz.after.entity.MeshInfo">
        SELECT x,y FROM f_scene_setting WHERE id = #{id}
    </select>

    <insert id="saveDeleteLog">
        INSERT INTO f_delete_log(delete_date,uid,deleteId,other) VALUES(NOW(),#{uid},#{sceneId},#{mid})
    </insert>
</mapper>