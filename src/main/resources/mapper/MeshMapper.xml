<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.MeshDao">

    <parameterMap id="createMapper" type="map">
        <parameter property="id" mode="IN"/>
        <parameter property="uid" mode="IN"/>
        <parameter property="name" mode="IN"/>
        <parameter property="mid" mode="OUT" jdbcType="INTEGER"/>
    </parameterMap>

    <sql id="Base_Column_List">
		m.id,
        m.uid,
        m.project_id,
        m.mname,
        m.mesh_id,
        m.mesh_type,
        p.name,
       	IFNULL(pl.pcount,0) pcount,
	    IFNULL(s.scount,0) scount
	</sql>

    <sql id="common_choose">
        <if test="uid!=null and uid!=''">
            <choose>
                <when test="role == 'admin'">
                    AND m.uid IN (SELECT u.id FROM f_user_account u INNER JOIN f_user_role r ON u.id=r.user_id WHERE
                    r.role_id in (2,3,4))
                </when>
                <when test="role == 'manager'">
                    AND m.uid IN (SELECT c.uid FROM f_user_customer c WHERE fid=(SELECT fid FROM f_user_customer WHERE
                    uid=#{uid}))
                    <!--
                        AND p.uid IN (SELECT c.uid FROM f_user_customer c INNER JOIN f_user_role r ON c.uid=r.user_id WHERE r.role_id in (4) OR fid=(SELECT fid FROM f_user_customer WHERE uid=#{uid}))
                     -->
                </when>
                <when test="role == 'user'">
                    AND m.uid =#{uid}
                </when>
                <!--<otherwise>-->
                <!--</otherwise>-->
            </choose>
        </if>
    </sql>

    <select id="save" parameterMap="createMapper" statementType="CALLABLE">
        CALL create_mesh (?,?,?,?)
    </select>

    <select id="getByMap" resultType="map" parameterType="SearchDict">
        SELECT
        <include refid="Base_Column_List"/>
        FROM f_mesh m
        INNER JOIN f_project p ON m.project_id = p.id
        LEFT JOIN (SELECT COUNT(1) pcount,mid FROM f_place GROUP BY mid) pl ON pl.mid=m.id
        LEFT JOIN (SELECT COUNT(1) scount,mid FROM f_scene GROUP BY mid) s ON s.mid=m.id
        WHERE 1=1
        <include refid="common_choose"></include>
        <if test="mname!=null and mname!=''">
            AND m.mname LIKE CONCAT('%',#{mname},'%')
        </if>
        <if test="meshId!=null and meshId!=''">
            AND m.mesh_id LIKE CONCAT('%',#{meshId},'%')
        </if>
        <if test="pname!=null and pname!=''">
            AND p.name LIKE CONCAT('%',#{pname},'%')
        </if>
        <if test="projectId!=null and projectId!=''">
            AND m.project_id=#{projectId}
        </if>
        GROUP BY m.uid,m.mesh_id
        ORDER BY m.update_date DESC,scount DESC
    </select>

    <select id="getMesh" resultType="OptionList" parameterType="map">
        SELECT CONCAT_WS('_',id,mesh_id) id,mesh_id, mname label FROM f_mesh m
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND m.project_id=#{projectId}
        </if>
    </select>

    <select id="getMeshInfo" resultType="MeshInfo" parameterType="int">
        SELECT
             m.id,
             m.mname,
             m.mesh_id,
             p.id project_id,
             p.name,
             IFNULL(s.scount,0) scount,
             IFNULL(pl.pcount,0) pcount,
             IFNULL(g.gcount,0) gcount,
             IFNULL(l.lcount,0) lcount
        FROM
             f_mesh m
        INNER JOIN f_project p ON m.project_id = p.id
        LEFT JOIN (SELECT COUNT(1) pcount,mid FROM f_place GROUP BY mid) pl ON pl.mid=m.id
        LEFT JOIN (SELECT COUNT(1) scount,mid FROM f_scene GROUP BY mid) s ON s.mid=m.id
        LEFT JOIN (SELECT COUNT(1) gcount,mid FROM f_group GROUP BY mid) g ON g.mid=m.id
        LEFT JOIN (SELECT COUNT(1) lcount,mid FROM f_light GROUP BY mid) l ON l.mid=m.id
        WHERE m.id=#{id}
    </select>

    <select id="getCountByTable" resultType="int" parameterType="string" statementType="STATEMENT">
        select count(*) from ${_parameter}
    </select>

    <select id="selectByMid" resultType="map" parameterType="list">
        SELECT
        m.id,
        m.mname,
        m.mesh_id,
        p.name
        FROM f_mesh m
        INNER JOIN f_project p ON m.project_id = p.id
        WHERE m.id IN
        <foreach collection="list" item="mid" index="index" open="(" close=")" separator=",">
            #{mid}
        </foreach>
    </select>
    <select id="getCount" resultType="int" parameterType="map">
        SELECT COUNT(1)
        FROM
        f_mesh m
        INNER JOIN f_project p ON m.project_id = p.id
        WHERE 1=1
        <choose>
            <when test="projectId!=null and projectId!=''">
                AND m.project_id = (SELECT id FROM f_project WHERE id = #{projectId})
            </when>
            <otherwise>
                AND p.id = (SELECT project_id FROM f_mesh WHERE id=#{id})
            </otherwise>
        </choose>
        AND m.mname = #{name}
    </select>
    <select id="getProjects" resultType="OptionList" parameterType="map">
        SELECT id,name label FROM f_project m WHERE 1=1
--         <include refid="common_choose"></include>
        <if test="uid!=null and uid!=''">
            AND m.uid =#{uid}
        </if>
    </select>

    <select id="getProject" resultType="OptionList" parameterType="int">
        SELECT id,name label FROM f_project p WHERE id=#{projectId}
    </select>
    <delete id="deleteMeshByIds" parameterType="list">
        DELETE FROM f_mesh
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <update id="saveRename" parameterType="map">
        UPDATE f_mesh SET mname=#{name},update_date=NOW() WHERE id =#{id}
    </update>

    <update id="saveUpdate" parameterType="map">
        UPDATE f_mesh SET project_id=#{pid},update_date=NOW()
        WHERE id IN
        <foreach collection="list" index="index" item="mid" separator="," open="(" close=")">
            #{mid}
        </foreach>
    </update>
</mapper>