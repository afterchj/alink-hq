<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.TimeLineDao">

    <sql id="TimeLineList">
        t.id,
        t.tname,
        m.mname,
        t.mid,
        m.mesh_id,
        IF( t.state = '0', '启用', '停用' ) state,
        IF( t.repetition = '0', '不重复', '重复' ) repetition,
        t.WEEK,
        DATE_FORMAT(t.create_date,'%Y/%m/%d %k:%i:%s') as create_date,
        DATE_FORMAT(t.update_date,'%Y/%m/%d %k:%i:%s') as update_date
    </sql>

    <sql id="TimeLineListById">
        t.id,
        t.tname,
        m.mname,
        t.mid,
        m.mesh_id,
        IF( t.state = '0', '启用', '停用' ) state,
        t.WEEK
    </sql>

    <sql id="TimeLineWhere">
        <where>
            <if test="id!=null">
                t.mid = m.id
            </if>
            <if test="id!=null">
                AND t.mid = #{id}
            </if>
            <if test="tname!=null and tname!='' and tname!='_'.toString()">
                AND t.tname LIKE concat('%',#{tname},'%')
            </if>
            <if test="tname=='_'.toString()">
                and  t.tname LIKE '%/_%' escape '/'
            </if>
            <if test="createDate!=null and createDate!=''">
                AND t.create_date BETWEEN #{createDate} and DATE_ADD(#{createDate},INTERVAL 1 DAY)
            </if>
            <if test="endTime!=null and endTime!=''">
                AND t.update_date BETWEEN #{endTime} and Date_Add(#{endTime},INTERVAL 1 DAY )
            </if>
            <if test="state!=null and state!=''">
                AND t.state=#{state}
            </if>
        </where>
    </sql>

    <select id="getProjectNameByMid" resultType="com.tpadsz.after.entity.ProjectList">
        SELECT NAME,id
        FROM
          f_project
        WHERE
          id = ( SELECT project_id FROM f_mesh WHERE id = #{id} )
    </select>

    <select id="getTimeLineByMid" resultType="com.tpadsz.after.entity.TimeLine">
        SELECT
          <include refid="TimeLineList"/>
        FROM
        f_time_line t,
        f_mesh m
        <include refid="TimeLineWhere"/>
        ORDER BY
        t.update_date desc
    </select>
    <select id="getTimeLineByMidOrderByUpdateDate" resultType="com.tpadsz.after.entity.TimeLine">
        SELECT
        <include refid="TimeLineList"/>
        FROM
        f_time_line t,
        f_mesh m
        <include refid="TimeLineWhere"/>
        ORDER BY
        t.update_date
    </select>
    <select id="getTimeLineByMidOrderByCreateDateDesc" resultType="com.tpadsz.after.entity.TimeLine">
        SELECT
        <include refid="TimeLineList"/>
        FROM
        f_time_line t,
        f_mesh m
        <include refid="TimeLineWhere"/>
        ORDER BY
        t.create_date DESC
    </select>
    <select id="getTimeLineByMidOrderByCreateDate" resultType="com.tpadsz.after.entity.TimeLine">
        SELECT
        <include refid="TimeLineList"/>
        FROM
        f_time_line t,
        f_mesh m
        <include refid="TimeLineWhere"/>
        ORDER BY
        t.create_date
    </select>

    <insert id="insertTimeLine" parameterType="com.tpadsz.after.entity.TimeLine">
        INSERT INTO `alink`.`f_time_line`(`tname`, `tid`, `mid`, `state`, `repetition`, `week`, `create_date`, `update_date`)
	    VALUES ( #{tname}, #{tid}, 19936, '1', '1', '周日、周一、周二', now(), now())
    </insert>

    <update id="updateTnameById">
        update f_time_line set tname=#{tname},update_date=now() where id=#{id}
    </update>

    <select id="getTnameById" resultType="int">
        select count(*) from f_time_line where mid=#{mid} and tname=#{tname}
    </select>

    <select id="getTimeLineById" resultType="com.tpadsz.after.entity.TimeLine">
        select
          <include refid="TimeLineListById"/>
		from f_time_line t,f_mesh m where t.mid=m.id and t.id=#{id}
    </select>

    <select id="getProjectByProjectId" resultType="com.tpadsz.after.entity.ProjectList">
        SELECT NAME,id FROM f_project WHERE id = #{projectId}
    </select>

    <select id="getTimePointByTsid" resultType="com.tpadsz.after.entity.TimePoint">
        SELECT
  	      p.tsid,p.sid,p.time,
          CASE
        	p.state
        	WHEN '0' THEN 'ON'
        	WHEN '1' THEN 'OFF'
        	WHEN '2' THEN 'ALl OFF'
        	WHEN '3' THEN 'ALL ON'
        	END AS state,
        	s.sname,
        	s.scene_id
        FROM
        	( SELECT tsid, sid, time, state FROM f_time_point WHERE state IN ( '0', '1' ) AND tsid = #{id} ) p,
        	f_scene s
        WHERE p.sid = s.id UNION
        SELECT
        	tsid,sid,time,
        CASE
        	state
        	WHEN '0' THEN 'ON'
        	WHEN '1' THEN 'OFF'
        	WHEN '2' THEN 'ALl OFF'
        	WHEN '3' THEN 'ALL ON'
        	END AS state,
        	NULL AS sname,
        	NULL as scene_id
        FROM f_time_point
        WHERE state IN ( '2', '3' ) AND tsid = #{id}
        ORDER BY time

    </select>

</mapper>